{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","runmewhensubmit","className","onSubmit","this","type","value","onChange","e","setState","target","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"sPA6BeA,E,4MA1BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACZA,EAAMC,iBAIN,EAAKC,MAAMC,gBAAgB,EAAKN,MAAMC,O,uDAMjC,IAAD,OACJ,OACA,yBAAKM,UAAY,cACb,0BAAMC,SAAUC,KAAKP,aAAcK,UAAY,WAC3C,yBAAKA,UAAY,SACb,+CACJ,2BAAOG,KAAO,OAAOC,MAAOF,KAAKT,MAAMC,KAAMW,SAAY,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACb,KAAMY,EAAEE,OAAOJ,kB,GApBtFK,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAQ,CACJC,cAAe,2DC8BRC,G,wDA7BX,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IAWVmB,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,GAAK,GACtC,EAAKX,SAAS,CAAEe,WAZhB,EAAK7B,MAAQ,CAAE6B,MAAO,GACtB,EAAKH,SAAWV,IAAMgB,YAJP,E,gEASfvB,KAAKiB,SAASC,QAAQM,iBAAiB,OAAQxB,KAAKe,Y,+BAS9C,IAAD,EACyBf,KAAKJ,MAAM6B,MAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KAErB,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAU7B,KAAKT,MAAM6B,SACzC,yBAAKU,IAAK9B,KAAKiB,SAAUc,IAAKL,EAC1BM,IAAKL,EAAKM,e,GAzBN1B,IAAMC,YCSf0B,EATG,SAACtC,GACf,IAAMuC,EAASvC,EAAMuC,OAAOC,KAAI,SAACX,GAC7B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAI5C,OAAO,yBAAK3B,UAAU,cAAcqC,ICqBzBI,E,4MA1BXhD,MAAQ,CAAE4C,OAAQ,I,EAGlBK,e,uCAAiB,WAAOhD,GAAP,eAAAiD,EAAA,sEAEUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOrD,KAHR,OAEPsD,EAFO,OAOb,EAAKzC,SAAS,CAAE8B,OAAQW,EAASC,KAAKC,UAPzB,2C,6GAeb,OACI,yBAAKlD,UAAU,eAAe8B,MAAO,CAAEqB,UAAW,SAC9C,kBAAC,EAAD,CAAWpD,gBAAiBG,KAAKwC,iBACjC,kBAAC,EAAD,CAAWL,OAAQnC,KAAKT,MAAM4C,c,GAtB5B5B,IAAMC,WCAxB0C,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,Y","file":"static/js/main.a14910ed.chunk.js","sourcesContent":["import React from 'react'\n\nclass SearchBar extends React.Component{\n    state = { term: ''};\n\n    onFormSubmit = (event) =>{\n        event.preventDefault();//prevent refreshing page\n\n\n        //we gonna call onsearchsubmit in App.js\n        this.props.runmewhensubmit(this.state.term) //SearchBar receive the props(the onSearchSubmit callback)\n        //the above becomes this.onSearchSubmit(this.state.term)\n    }\n\n    //<input>onchange: everytime user input a letter, invoke the setState\n    //<form>onSubmit: everytime user submit, invoke onFormSubmit\n    render(){\n        return (\n        <div className = \"ui segment\">\n            <form onSubmit={this.onFormSubmit} className = \"ui form\">\n                <div className = \"field\">\n                    <label>Image Search</label>\n                <input type = \"text\" value={this.state.term} onChange = {(e) => this.setState({term: e.target.value})}/>\n                </div>   \n            </form>    \n        </div>\n        )\n    }\n}\nexport default SearchBar\n\n\n","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers:{\n        Authorization: 'Client-ID AJadT4eeLQPq2cIv4X82CzTyyv4XvLx-QUsIJoToFC8'\n    }\n})\n","//show 1 image\n//handle the span of image\n//span: takes how many height of cell\nimport React from 'react'\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { spans: 0 }\n        this.imageRef = React.createRef();\n    }\n    //imageref = image object\n    //after render\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans)\n    }\n    //a callback => arrow\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10 + 1)\n        this.setState({ spans })\n    }\n\n    render() {\n        const { description, urls } = this.props.image //destructuring\n\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n                <img ref={this.imageRef} alt={description}\n                    src={urls.regular} />\n            </div>\n        )\n    }\n}\nexport default ImageCard","import './ImageList.css'\nimport ImageCard from './ImageCard'\nimport React from 'react'\n\n//image is iterator and the object we see \nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image} />\n    })\n\n\n    return <div className=\"image-list\">{images}</div>\n    //we take list of images from props and return it to render\n}\nexport default ImageList","import React from 'react'\nimport SearchBar from './SearchBar'\nimport unsplash from '../api/unsplash'\nimport ImageList from './ImageList'\n\nclass App extends React.Component {\n    state = { images: [] }\n\n\n    onSearchSubmit = async (term) => {\n        //make request when user submit \n        const response = await unsplash.get('/search/photos', {\n            params: { query: term },\n\n        })\n\n        this.setState({ images: response.data.results })\n    }\n    //when term is passed to onSearchSubmit, we can begin making api request for this data term\n    //onSearchSubmit is passed through runmewhensubmit as props\n\n\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px' }}>\n                <SearchBar runmewhensubmit={this.onSearchSubmit} />\n                <ImageList images={this.state.images} />\n            </div>\n        )\n    }\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(<App/>, document.querySelector('#root'))\n"],"sourceRoot":""}